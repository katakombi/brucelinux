#!/bin/bash

. /etc/kernel_parameter_overrides

# mount encrypted home
mount /dev/mapper/BL_P4LABEL /home

# set default password for default user
SEEDED_PWD="$(openssl passwd -6 -in BL_USERKEYFILE)"

# if no home directory exists provision all files from /etc/skel
if [[ ! -d /home/$USERNAME ]]; then
  mkdir -p /home/$USERNAME
  rsync -rahp /etc/skel/ /home/$USERNAME/
  chown -R $USERNAME.$USERNAME /home/$USERNAME
fi

# override with individual password if one is set
if [[ -r /home/$USERNAME/.passwd ]]; then
  SEEDED_PWD="$(openssl passwd -6 -in /home/$USERNAME/.passwd)"
fi
sed -i 's|^'$USERNAME':[^:]*:|'$USERNAME':'$SEEDED_PWD':|' /etc/shadow

# create and mount swap file
rm -f /home/$USERNAME/.swapfile
fallocate -l 2G /home/$USERNAME/.swapfile
chmod 600 /home/$USERNAME/.swapfile
mkswap /home/$USERNAME/.swapfile
swapon /home/$USERNAME/.swapfile

# create temporary cache dir
mkdir -p /tmp/.cache-$USERNAME/
chown $USERNAME.$USERNAME -R /tmp/.cache-$USERNAME/

# restore user-specific wifi/lan connections
if [[ -d "/home/$USERNAME/.config/NetworkManager/connections/" ]]; then
    rsync -ahvp --delete /home/$USERNAME/.config/NetworkManager/connections/ /etc/NetworkManager/system-connections/
fi

# generate and set hostname
if [[ ! -r /home/$USERNAME/.unique-hostname ]]; then
    uuidgen | head -c8 > /home/$USERNAME/.unique-hostname
fi
hostnamectl set-hostname $(cat /home/$USERNAME/.unique-hostname)

# apply specific netcfg
if [[ -r /etc/rc.local.d/$NETCFG.netcfg.sh ]]; then
  source /etc/rc.local.d/$NETCFG.netcfg
fi

# apply specific bootcfg
if [[ -r /etc/rc.local.d/$BOOTCFG.bootcfg.sh ]]; then
  source /etc/rc.local.d/$BOOTCFG.bootcfg
fi

# disable
# gnome keyring - required for WLAN/network manager
# chmod -x /usr/bin/{gnome-keyring-3,gnome-keyring-daemon}
# ibus
chmod -x /usr/bin/{ibus,ibus-setup,ibus-daemon}
